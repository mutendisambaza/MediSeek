/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mediseek.pat.Pharmacist;
import javax.swing.JOptionPane;
import mediseek.pat.Tables.Medicine;
import mediseek.pat.Tables.Patients;
import mediseek.pat.Tables.useMedicine;
import mediseek.pat.Tables.usePatients;
import mediseek.pat.CriticalClasses.DataValidation;
import mediseek.pat.CriticalClasses.Methods;


/**
 *
 * @author tendi
 */
public class PrescriptionGUI extends javax.swing.JFrame {
Patients[] patientDirectory = new Patients[100];
Patients[] user = new Patients[100]; 
usePatients objPatients = new usePatients();

Medicine[] medDirectory = new Medicine[100]; 
useMedicine objMeds = new useMedicine();

//OTHER OBJECTS
DataValidation objValidation = new DataValidation();
Methods obj = new Methods();
private String ID = "";
    /**
     * Creates new form PrescriptionGUI
     */

/**
     * Constructor method that displays the arrays in their respective lists
     * Takes the userID entered in the login and and saves it in a global variable
     * Also places the PatientID of the patient in the necessary field to efficiency purposes
     */
public PrescriptionGUI(String userID) {
        initComponents();
        getMeds();
        ID = userID;
        tf_PatientID.setText(ID);
        tf_Med1Cost.setText("0");
        tf_Med2Cost.setText("0");
        tf_Med3Cost.setText("0");
        tf_Med4Cost.setText("0");

    }
/**
     * Constructor method that displays the arrays in their respective lists
     * Takes the userID entered in the login and and saves it in a global variable
     */
    public PrescriptionGUI() {
        initComponents();
        getMeds();
        
        tf_Med1Cost.setText("0");
        tf_Med2Cost.setText("0");
        tf_Med3Cost.setText("0");
        tf_Med4Cost.setText("0");

    }
/**
     * Method clears a display
     * fills an array with the elements based on the SQL Statement which specifically looks for the Patient ID
     * Only making use of the first record [top of the search]
     * This will be the record of the particular patient that you will be creating the prescription for
     */     
  public Patients getUserInfo(){   
        user = objPatients.fromtblPatients("SELECT * FROM tblPatients WHERE Patient_ID =\""+tf_PatientID.getText()+"\";");
        return user[0];
    }  
    
    
public Medicine record1 =null, record2 =null , record3 =null, record4 = null;
public int cost1 = 0, cost2 = 0, cost3 = 0, cost4, total=0;
public    String item1 = "",item2 = "",item3 = "",item4 = "";
public    String instr1 ="",instr2 ="",instr3 ="",instr4 ="";

/**
     * Method fills an array with the elements based on the SQL Statement
     * This will be the records of the medicines in available for prescription
     */  
public void getMeds() {
        medDirectory = objMeds.fromtblMedicine("SELECT * FROM tblMedicine;");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tf_Med2Cost = new javax.swing.JTextField();
        btnPrintBill = new javax.swing.JButton();
        tf_MedTotalCost = new javax.swing.JTextField();
        tf_Med3Cost = new javax.swing.JTextField();
        tf_Med4Cost = new javax.swing.JTextField();
        tf_Med1Cost = new javax.swing.JTextField();
        tf_PatientID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cbMed1 = new javax.swing.JComboBox<>();
        cbMed2 = new javax.swing.JComboBox<>();
        cbMed3 = new javax.swing.JComboBox<>();
        cbMed4 = new javax.swing.JComboBox<>();
        jspinMed4 = new javax.swing.JSpinner();
        jspinMed1 = new javax.swing.JSpinner();
        jspinMed2 = new javax.swing.JSpinner();
        jspinMed3 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnSeeTotal = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 255, 204));
        lblTitle.setText("Issue a Prescription:");
        jPanel1.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, -10, 390, 60));

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Qauntity:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 70, 30));

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("R");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, 20, 20));

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Medicines:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 90, 30));

        jLabel10.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Cost:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 50, 30));

        jLabel11.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("1.");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 20, 30));

        tf_Med2Cost.setBackground(new java.awt.Color(6, 23, 37));
        tf_Med2Cost.setForeground(new java.awt.Color(255, 255, 255));
        tf_Med2Cost.setToolTipText("Enter the ID of the patient you wish to schedule an appointment for. NOTE: They have to be added as a patient in the hospital database or you may not progress!!");
        jPanel1.add(tf_Med2Cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 100, 40));

        btnPrintBill.setBackground(new java.awt.Color(0, 204, 51));
        btnPrintBill.setForeground(new java.awt.Color(0, 0, 0));
        btnPrintBill.setText("PRINT");
        btnPrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintBillActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrintBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 570, -1, -1));

        tf_MedTotalCost.setBackground(new java.awt.Color(6, 23, 37));
        tf_MedTotalCost.setForeground(new java.awt.Color(255, 255, 255));
        tf_MedTotalCost.setToolTipText("Enter the ID of the patient you wish to schedule an appointment for. NOTE: They have to be added as a patient in the hospital database or you may not progress!!");
        tf_MedTotalCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_MedTotalCostActionPerformed(evt);
            }
        });
        jPanel1.add(tf_MedTotalCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, 100, 40));

        tf_Med3Cost.setBackground(new java.awt.Color(6, 23, 37));
        tf_Med3Cost.setForeground(new java.awt.Color(255, 255, 255));
        tf_Med3Cost.setToolTipText("Enter the ID of the patient you wish to schedule an appointment for. NOTE: They have to be added as a patient in the hospital database or you may not progress!!");
        jPanel1.add(tf_Med3Cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 100, 40));

        tf_Med4Cost.setBackground(new java.awt.Color(6, 23, 37));
        tf_Med4Cost.setForeground(new java.awt.Color(255, 255, 255));
        tf_Med4Cost.setToolTipText("Enter the ID of the patient you wish to schedule an appointment for. NOTE: They have to be added as a patient in the hospital database or you may not progress!!");
        jPanel1.add(tf_Med4Cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, 100, 40));

        tf_Med1Cost.setBackground(new java.awt.Color(6, 23, 37));
        tf_Med1Cost.setForeground(new java.awt.Color(255, 255, 255));
        tf_Med1Cost.setToolTipText("Enter the ID of the patient you wish to schedule an appointment for. NOTE: They have to be added as a patient in the hospital database or you may not progress!!");
        jPanel1.add(tf_Med1Cost, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 100, 40));

        tf_PatientID.setBackground(new java.awt.Color(6, 23, 37));
        tf_PatientID.setForeground(new java.awt.Color(255, 255, 255));
        tf_PatientID.setToolTipText("Enter the ID of the patient you wish to schedule an appointment for. NOTE: They have to be added as a patient in the hospital database or you may not progress!!");
        jPanel1.add(tf_PatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 100, 30));

        jLabel12.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("2.");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 20, 30));

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("3.");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 20, 30));

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("4.");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 20, 30));

        cbMed1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NA", "Amlodipine", "Amoxicillin", "Asprin", "Azithromycin", "Bromazepam", "Disprin", "Doxycycline", "Epinephrine", "Ferrimed", "Ibuprofen", "Iliadin", "Ivermectin", "Lactulose", "Lidocaine", "Lorazepam", "Lyrica", "Oxymetazoline", "Panado", "Prednisone", "Thiamine" }));
        cbMed1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMed1ActionPerformed(evt);
            }
        });
        jPanel1.add(cbMed1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 110, -1));

        cbMed2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NA", "Amlodipine", "Amoxicillin", "Asprin", "Azithromycin", "Bromazepam", "Disprin", "Doxycycline", "Epinephrine", "Ferrimed", "Ibuprofen", "Iliadin", "Ivermectin", "Lactulose", "Lidocaine", "Lorazepam", "Lyrica", "Oxymetazoline", "Panado", "Prednisone", "Thiamine" }));
        cbMed2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMed2ActionPerformed(evt);
            }
        });
        jPanel1.add(cbMed2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 110, -1));

        cbMed3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NA", "Amlodipine", "Amoxicillin", "Asprin", "Azithromycin", "Bromazepam", "Disprin", "Doxycycline", "Epinephrine", "Ferrimed", "Ibuprofen", "Iliadin", "Ivermectin", "Lactulose", "Lidocaine", "Lorazepam", "Lyrica", "Oxymetazoline", "Panado", "Prednisone", "Thiamine" }));
        cbMed3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMed3ActionPerformed(evt);
            }
        });
        jPanel1.add(cbMed3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, 110, -1));

        cbMed4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NA", "Amlodipine", "Amoxicillin", "Asprin", "Azithromycin", "Bromazepam", "Disprin", "Doxycycline", "Epinephrine", "Ferrimed", "Ibuprofen", "Iliadin", "Ivermectin", "Lactulose", "Lidocaine", "Lorazepam", "Lyrica", "Oxymetazoline", "Panado", "Prednisone", "Thiamine" }));
        cbMed4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMed4ActionPerformed(evt);
            }
        });
        jPanel1.add(cbMed4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 110, -1));

        jspinMed4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        jPanel1.add(jspinMed4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        jspinMed1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        jPanel1.add(jspinMed1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        jspinMed2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        jPanel1.add(jspinMed2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, -1));

        jspinMed3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));
        jPanel1.add(jspinMed3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, -1, -1));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Patient ID:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 90, 30));

        jLabel1.setText("********************************************************************************");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 400, -1));

        jLabel2.setText("********************************************************************************");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 450, 400, -1));

        jLabel3.setText("********************************************************************************");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 400, -1));

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Total: R");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 60, 20));

        jLabel16.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("R");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 169, 20, -1));

        jLabel17.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("R");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 20, 20));

        jLabel18.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("R");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 20, 20));

        btnClose.setBackground(new java.awt.Color(102, 102, 102));
        btnClose.setText("CLOSE");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 570, -1, -1));

        btnSeeTotal.setText("See Total");
        btnSeeTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeeTotalActionPerformed(evt);
            }
        });
        jPanel1.add(btnSeeTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Step 5: Print Prescription");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 540, 150, 40));

        jLabel6.setForeground(new java.awt.Color(23, 0, 0));
        jLabel6.setText("Step 1: Select quantity");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 130, -1));

        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Step 2: Select Your Medicine");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 160, -1));

        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Step 4: Display your total");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 160, 20));

        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Step 3: Repeat S1+S2  for more medicines [MAX 4]");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 290, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintBillActionPerformed
    
  if(objValidation.isNotEmpty(tf_PatientID.getText())){
            if(cbMed1.getSelectedIndex() ==0 && cbMed2.getSelectedIndex() ==0 && cbMed3.getSelectedIndex() ==0 && cbMed4.getSelectedIndex() ==0){
                  JOptionPane.showMessageDialog(null, "You have to input at least one medicine in order to print");
            }else{
                   String name = getUserInfo().getName(), surname = getUserInfo().getSurname();
                   int quan1 = Integer.parseInt(jspinMed1.getValue().toString()), quan2 = Integer.parseInt(jspinMed2.getValue().toString()), quan3 = Integer.parseInt(jspinMed3.getValue().toString()), quan4 = Integer.parseInt(jspinMed4.getValue().toString());    
                   int cost1 =Integer.parseInt(tf_Med1Cost.getText()), cost2 = Integer.parseInt(tf_Med2Cost.getText()), cost3 = Integer.parseInt(tf_Med3Cost.getText()), cost4 = Integer.parseInt(tf_Med4Cost.getText());      


                    if(item1.equals("")){ quan1 = 0; cost1 = 0; instr1 = "";}
                    if(item2.equals("")){ quan2 = 0; cost2 = 0; instr2 = "";}
                    if(item3.equals("")){ quan3 = 0; cost3 = 0; instr3 = "";}
                    if(item4.equals("")){ quan4 = 0; cost4 = 0; instr4 = "";}      


                    obj.writeToReciept(name, surname, 
                            item1, item2, item3, item4,
                            quan1,quan2,quan3,quan4,
                            cost1, cost2, cost3, cost4,  total, 
                            instr1, instr2, instr3, instr4);
                    System.out.println(name+"  "+surname+"  "+ 
                            item1+"  "+item2+"  "+ item3+"  "+item4+"  "+
                            quan1+"  "+quan2+"  "+quan3+"  "+quan4+"  "+
                            cost1+"  "+ cost2+"  "+ cost3+"  "+ cost4+"  "+  total+"  "+ 
                            instr1+"  "+ instr2+"  "+ instr3+"  "+ instr4);
                     obj.openWord("RECIEPT.txt");
                    JOptionPane.showMessageDialog(null,"Please PRINT the Reciept and then proceed to CLEAR the file!");
            }
}
else{JOptionPane.showMessageDialog(null, "PLEASE INPUT A PATIENT ID");}

      
        
    }//GEN-LAST:event_btnPrintBillActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();      
    }//GEN-LAST:event_btnCloseActionPerformed

    private void cbMed1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMed1ActionPerformed

        switch(cbMed1.getSelectedIndex()){
            case 0: 
                    cost1 = 0;
                    tf_Med1Cost.setText(cost1+"");
                    record1 = null ;
                break;
            case 1: 
                    record1 = medDirectory[0];                     
                    cost1 = medDirectory[0].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 2: 
                    record1 = medDirectory[1];                     
                    cost1 = medDirectory[1].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 3: 
                    record1 = medDirectory[2];                     
                    cost1 = medDirectory[2].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;
            case 4: 
                
                    record1 = medDirectory[3];                     
                    cost1 = medDirectory[3].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;    
            case 5: 
                
                    record1 = medDirectory[4];                     
                    cost1 = medDirectory[4].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;    
            case 6: 
                
                    record1 = medDirectory[5];                     
                    cost1 = medDirectory[5].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;    
            case 7: 
                
                    record1 = medDirectory[6];                     
                    cost1 = medDirectory[6].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;
            case 8: 
                
                    record1 = medDirectory[7];                     
                    cost1 = medDirectory[7].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;
            case 9: 
                
                    record1 = medDirectory[8];                     
                    cost1 = medDirectory[8].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;    
            case 10: 
                
                    record1 = medDirectory[9];                     
                    cost1 = medDirectory[9].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;    
            case 11: 
              
                    record1 = medDirectory[10];                     
                    cost1 = medDirectory[10].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                    
                break;
            case 12: 
                    record1 = medDirectory[11];                     
                    cost1 = medDirectory[11].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 13: 
                    record1 = medDirectory[12];                     
                    cost1 = medDirectory[12].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 14: 
                    record1 = medDirectory[13];                     
                    cost1 = medDirectory[13].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 15: 
                    record1 = medDirectory[14];                     
                    cost1 = medDirectory[14].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;
            case 16: 
                    record1 = medDirectory[15];                     
                    cost1 = medDirectory[15].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 17: 
                    record1 = medDirectory[16];                     
                    cost1 = medDirectory[16].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;
            case 18: 
                    record1 = medDirectory[17];                     
                    cost1 = medDirectory[17].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 19: 
                    record1 = medDirectory[18];                     
                    cost1 = medDirectory[18].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 20: 
                    record1 = medDirectory[19];                     
                    cost1 = medDirectory[19].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;    
            case 21: 
                    record1 = medDirectory[20];                     
                    cost1 = medDirectory[20].getCost()*Integer.parseInt(jspinMed1.getValue().toString());
                    tf_Med1Cost.setText(cost1+"");
                
                break;  
            default: System.out.println("INVALID SELECTION");
                break;
                
                
        }
        

       if(record1== null){
           item1 = "";instr1 ="";
       } else {item1 = record1.getMedicine();
               instr1 = record1.getUsageDescription();}
            
             
        
        
        
    }//GEN-LAST:event_cbMed1ActionPerformed

    private void cbMed3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMed3ActionPerformed
       switch(cbMed3.getSelectedIndex()){
            case 0: 
                    record3 = null ;
                    cost3 = 0;
                    tf_Med3Cost.setText(cost3+"");
                    
                break;
            case 1: 
                    record3 = medDirectory[0];                     
                    cost3 = medDirectory[0].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 2: 
                    record3 = medDirectory[1];                     
                    cost3 = medDirectory[1].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 3: 
                    record3 = medDirectory[2];                     
                    cost3 = medDirectory[2].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;
            case 4: 
                    record3 = medDirectory[3];                     
                    cost3 = medDirectory[3].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;    
            case 5: 
                    record3 = medDirectory[4];                     
                    cost3 = medDirectory[4].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;    
            case 6: 
                    record3 = medDirectory[5];                     
                    cost3 = medDirectory[5].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;    
            case 7: 
                    record3 = medDirectory[6];                     
                    cost3 = medDirectory[6].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;
            case 8: 
                    record3 = medDirectory[7];                     
                    cost3 = medDirectory[7].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;
            case 9: 
                
                    record3 = medDirectory[8];                     
                    cost3 = medDirectory[8].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;    
            case 10: 
                    record3 = medDirectory[9];                     
                    cost3 = medDirectory[9].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;    
            case 11: 
                    record3 = medDirectory[10];                     
                    cost3 = medDirectory[10].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                    
                break;
            case 12: 
                    record3 = medDirectory[11];                     
                    cost3 = medDirectory[11].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 13: 
                    record3 = medDirectory[12];                     
                    cost3 = medDirectory[12].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 14: 
                    record3 = medDirectory[13];                     
                    cost3 = medDirectory[13].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 15: 
                    record3 = medDirectory[14];                     
                    cost3 = medDirectory[14].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;
            case 16: 
                    record3 = medDirectory[15];                     
                    cost3 = medDirectory[15].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 17: 
                    record3 = medDirectory[16];                     
                    cost3 = medDirectory[16].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;
            case 18: 
                    record3 = medDirectory[17];                     
                    cost3 = medDirectory[17].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 19: 
                    record3 = medDirectory[18];                     
                    cost3 = medDirectory[18].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 20: 
                    record3 = medDirectory[19];                     
                    cost3 = medDirectory[19].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;    
            case 21: 
                    record3 = medDirectory[20];                     
                    cost3 = medDirectory[20].getCost()*Integer.parseInt(jspinMed3.getValue().toString());
                    tf_Med3Cost.setText(cost3+"");
                
                break;  
            default: System.out.println("INVALID SELECTION");
                break;
                
                
        }
       if(record3 == null){
           item3 = "";instr3 ="";
       } else {item3 = record3.getMedicine();
               instr3 = record3.getUsageDescription();}
       
       
    }//GEN-LAST:event_cbMed3ActionPerformed

    private void cbMed2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMed2ActionPerformed
switch(cbMed2.getSelectedIndex()){
            case 0: 
                    cost2 = 0;
                    tf_Med2Cost.setText(cost2+"");
                    record2 = null ;
                break;
            case 1: 
                    record2 = medDirectory[0];                     
                    cost2 = medDirectory[0].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 2: 
                    record2 = medDirectory[1];                     
                    cost2 = medDirectory[1].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 3: 
                    record2 = medDirectory[2];                     
                    cost2 = medDirectory[2].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;
            case 4: 
                
                    record2 = medDirectory[3];                     
                    cost2 = medDirectory[3].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;    
            case 5: 
                
                    record2 = medDirectory[4];                     
                    cost2 = medDirectory[4].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;    
            case 6: 
                
                    record2 = medDirectory[5];                     
                    cost2 = medDirectory[5].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;    
            case 7: 
                    record2 = medDirectory[6];                     
                    cost2 = medDirectory[6].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;
            case 8: 
                    record2 = medDirectory[7];                     
                    cost2 = medDirectory[7].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;
            case 9: 
                
                    record2 = medDirectory[8];                     
                    cost2 = medDirectory[8].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;    
            case 10: 
                    record2 = medDirectory[9];                     
                    cost2 = medDirectory[9].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;    
            case 11: 
                    record2 = medDirectory[10];                     
                    cost2 = medDirectory[10].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                    
                break;
            case 12: 
                    record2 = medDirectory[11];                     
                    cost2 = medDirectory[11].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 13: 
                    record2 = medDirectory[12];                     
                    cost2 = medDirectory[12].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 14: 
                    record2 = medDirectory[13];                     
                    cost2 = medDirectory[13].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 15: 
                    record2 = medDirectory[14];                     
                    cost2 = medDirectory[14].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;
            case 16: 
                    record2 = medDirectory[15];                     
                    cost2 = medDirectory[15].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 17: 
                    record2 = medDirectory[16];                     
                    cost2 = medDirectory[16].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;
            case 18: 
                    record2 = medDirectory[17];                     
                    cost2 = medDirectory[17].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 19: 
                    record2 = medDirectory[18];                     
                    cost2 = medDirectory[18].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 20: 
                    record2 = medDirectory[19];                     
                    cost2 = medDirectory[19].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;    
            case 21: 
                    record2 = medDirectory[20];                     
                    cost2 = medDirectory[20].getCost()*Integer.parseInt(jspinMed2.getValue().toString());
                    tf_Med2Cost.setText(cost2+"");
                
                break;  
            default: System.out.println("INVALID SELECTION");
                break;
                
                
        }    



       if(record2== null){
           item2 = "";instr2 ="";
       } else {item2 = record2.getMedicine();
               instr2 = record2.getUsageDescription();}
        
        
    }//GEN-LAST:event_cbMed2ActionPerformed

    private void cbMed4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMed4ActionPerformed
        switch(cbMed4.getSelectedIndex()){
            case 0: 
                    record4 = null ;
                    cost4 = 0;
                    tf_Med4Cost.setText(cost4+"");
                    
                break;
            case 1: 
                    record4 = medDirectory[0];                     
                    cost4 = medDirectory[0].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 2: 
                    record4 = medDirectory[1];                     
                    cost4 = medDirectory[1].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 3: 
                    record4 = medDirectory[2];                     
                    cost4 = medDirectory[2].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;
            case 4: 
                    record4 = medDirectory[3];                     
                    cost4 = medDirectory[3].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;    
            case 5: 
                    record4 = medDirectory[4];                     
                    cost4 = medDirectory[4].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;    
            case 6: 
                    record4 = medDirectory[5];                     
                    cost4 = medDirectory[5].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;    
            case 7: 
                    record4 = medDirectory[6];                     
                    cost4 = medDirectory[6].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;
            case 8: 
                    record4 = medDirectory[7];                     
                    cost4 = medDirectory[7].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;
            case 9: 
                    record4 = medDirectory[8];                     
                    cost4 = medDirectory[8].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;    
            case 10: 
                    record4 = medDirectory[9];                     
                    cost4 = medDirectory[9].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;    
            case 11: 
                    record4 = medDirectory[10];                     
                    cost4 = medDirectory[10].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                    
                break;
            case 12: 
                    record4 = medDirectory[11];                     
                    cost4 = medDirectory[11].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 13: 
                    record4 = medDirectory[12];                     
                    cost4 = medDirectory[12].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 14: 
                    record4 = medDirectory[13];                     
                    cost4 = medDirectory[13].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 15: 
                    record4 = medDirectory[14];                     
                    cost4 = medDirectory[14].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;
            case 16: 
                    record4 = medDirectory[15];                     
                    cost4 = medDirectory[15].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 17: 
                    record4 = medDirectory[16];                     
                    cost4 = medDirectory[16].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;
            case 18: 
                    record4 = medDirectory[17];                     
                    cost4 = medDirectory[17].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 19: 
                    record4 = medDirectory[18];                     
                    cost4 = medDirectory[18].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 20: 
                    record4 = medDirectory[19];                     
                    cost4 = medDirectory[19].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;    
            case 21: 
                    record4 = medDirectory[20];                     
                    cost4 = medDirectory[20].getCost()*Integer.parseInt(jspinMed4.getValue().toString());
                    tf_Med4Cost.setText(cost4+"");
                
                break;  
            default: JOptionPane.showMessageDialog(null, "INVALID SELECTION");
                break;
                
                
        }
        
        if(record4== null){
           item4 = "";instr4 ="";
       } else {item4 = record4.getMedicine();
               instr4 = record4.getUsageDescription();}
        
    }//GEN-LAST:event_cbMed4ActionPerformed

    private void btnSeeTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeeTotalActionPerformed
        System.out.println(getUserInfo());
        
        total = cost1+cost2+cost3+cost4;  
     tf_MedTotalCost.setText(total+"");
        
        
    }//GEN-LAST:event_btnSeeTotalActionPerformed

    private void tf_MedTotalCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_MedTotalCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_MedTotalCostActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrescriptionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrescriptionGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnPrintBill;
    private javax.swing.JButton btnSeeTotal;
    private javax.swing.JComboBox<String> cbMed1;
    private javax.swing.JComboBox<String> cbMed2;
    private javax.swing.JComboBox<String> cbMed3;
    private javax.swing.JComboBox<String> cbMed4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jspinMed1;
    private javax.swing.JSpinner jspinMed2;
    private javax.swing.JSpinner jspinMed3;
    private javax.swing.JSpinner jspinMed4;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField tf_Med1Cost;
    private javax.swing.JTextField tf_Med2Cost;
    private javax.swing.JTextField tf_Med3Cost;
    private javax.swing.JTextField tf_Med4Cost;
    private javax.swing.JTextField tf_MedTotalCost;
    private javax.swing.JTextField tf_PatientID;
    // End of variables declaration//GEN-END:variables
}
